CREATE TABLE CURSOS (
	IDCURSO INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30) NOT NULL,
	HORAS INT(3) NOT NULL,
	VALOR FLOAT(10,2) NOT NULL
);

INSERT INTO CURSOS VALUES(NULL, 'JAVA', 30, 500.00);
INSERT INTO CURSOS VALUES(NULL, 'POWER BI', 40, 200.00);

DELIMITER $

STATUS

CREATE PROCEDURE CAD_CURSO(P_NOME VARCHAR(30),
			   P_HORAS INT(30),
			   P_PRECO FLOAT(10,2))
BEGIN
	INSERT INTO CURSOS VALUES(NULL, P_NOME, P_HORAS, P_PRECO);
END
$

DELIMITER ;

STATUS

CALL CAD_CURSO('TABLEAU', 35, 3000.00);
CALL CAD_CURSO('OFFICE 356', 100, 400.00);
CALL CAD_CURSO('YOUTUBE', 20, 200.00);

/*******************************************/
/* CAP 14 V. 68 */
CREATE TABLE VENDEDORES (
	IDVENDEDOR INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR (30),
	SEXO CHAR (1),
	JANEIRO FLOAT (10,2),
	FEVEREIRO FLOAT (10,2),
	MARCO FLOAT (10,2)
);

INSERT INTO VENDEDORES VALUES (NULL, 'CARLOS', 'M', 2534.50, 4500.68, 7753.90);
INSERT INTO VENDEDORES VALUES (NULL, 'ASTOLFO', 'M', 3454.50, 5000.80, 2753.00);
INSERT INTO VENDEDORES VALUES (NULL, 'CAROL', 'F', 3400.00, 5430.18, 7583.70);
INSERT INTO VENDEDORES VALUES (NULL, 'ROSE', 'F', 1554.35, 3650.25, 2853.99);
INSERT INTO VENDEDORES VALUES (NULL, 'LEO', 'M', 3154.50, 980.16, 5853.80);
INSERT INTO VENDEDORES VALUES (NULL, 'JOSE', 'M', 1854.50, 8550.16, 8503.80);
INSERT INTO VENDEDORES VALUES (NULL, 'BIAL', 'M', 3784.50, 9800.16, 5783.80);
INSERT INTO VENDEDORES VALUES (NULL, 'CELIA', 'F', 5004.50, 1980.16, 8153.80);

/* MAX - TRAZ O VALOR MÁXIMO DE UMA COLUNA */
SELECT MAX(FEVEREIRO) AS MAIOR_FEV
FROM VENDEDORES;

/* MIN - TRAZ O VALOR MÍIMO DE UMA COLUNA */
SELECT MIN(FEVEREIRO) AS MIN_FEV
FROM VENDEDORES;

/* AVG - TRAZ O VALOR MÉDIO DE UMA COLUNA */
SELECT AVG(FEVEREIRO) AS MÉDIA_FEV
FROM VENDEDORES;


/* VÁRIAS FUNÇÕES */
SELECT MAX(JANEIRO) AS MAX_JAN,
	MIN(JANEIRO) AS MIN_JAN,	
	AVG(JANEIRO) AS MEDIA_JAN
	FROM VENDEDORES;

/* FUNÇÃO TRUNCATE */
SELECT MAX(JANEIRO) AS MAX_JAN,
	MIN(JANEIRO) AS MIN_JAN,	
	TRUNCATE(AVG(JANEIRO), 2) AS MEDIA_JAN
	FROM VENDEDORES;

/* A30 - AGREGANDO COM SUM() */
SELECT SUM(JANEIRO) AS TOTAL_JAN,
	SUM(FEVEREIRO) AS TOTAL_FEV,
	SUM(MARCO) AS TOTAL_MAR
	FROM VENDEDORES;

/* VENDAS POR SEXO */
SELECT SEXO, SUM(MARCO) AS TOTAL_MARCO
FROM VENDEDORES
GROUP BY SEXO;

/******* EXERCÍCIOS *******/ SUBQUERIES */
/* A31 - VENDEDOR QUE VENDEU MAIS E MENOS EM MARCO E O SEU NOME */

SELECT NOME, MARCO
FROM VENDEDORES
GROUP BY NOME
ORDER BY MARCO;

SELECT NOME, MARCO FROM VENDEDORES
	WHERE MARCO = (SELECT MIN(MARCO) FROM VENDEDORES);

SELECT NOME, MARCO FROM VENDEDORES
	WHERE MARCO = (SELECT MAX(MARCO) FROM VENDEDORES);

/* VENDEDOR QUE VENDEU MAIS QUE A MÉDIA DE VENDAS DE FEV */
SELECT NOME, FEVEREIRO FROM VENDEDORES
	WHERE FEVEREIRO > (SELECT AVG(FEVEREIRO) FROM VENDEDORES);

SELECT TRUNCATE(AVG(FEVEREIRO), 2) AS MEDIA_FEV
	FROM VENDEDORES;

/* A32 - OPERAÇÕES EM LINHA */
SELECT NOME, JANEIRO, FEVEREIRO, MARCO,
	(JANEIRO + FEVEREIRO + MARCO) AS 'TOTAL',
	TRUNCATE((JANEIRO + FEVEREIRO + MARCO)/3, 2) AS 'MEDIA'
	FROM VENDEDORES;

/* A33 - ALTERANDO TABELAS */
CREATE TABLE TABELA (
	COLUNA1 VARCHAR (30),
	COLUNA2 VARCHAR (30),
	COLUNA3 VARCHAR (30)
);

/* ADICIONANDO UMA PK */
ALTER TABLE TABELA
ADD PRIMARY KEY (COLUNA1);

/* ADICIONANDO COLUNA SEM POSIÇÃO. ÚLTIMA POSIÇÃO */
ALTER TABLE TABELA
ADD COLUNA VARCHAR (30);

/* ADICIONANDO COLUNA COM POSIÇÃO */
ALTER TABLE TABELA
ADD COLUMN COLUNA4 VARCHAR (30) NOT NULL UNIQUE
AFTER COLUNA3;

/* MODIFICANDO O TIPO DE UM CAMPO */
ALTER TABLE TABELA MODIFY COLUNA2 DATE NOT NULL;

/* RENOMEANDO O NOME DA TABELA */
ALTER TABLE TABELA
RENAME PESSOA;


CREATE TABLE TIME (
	IDTIME INT PRIMARY KEY AUTO_INCREMENT,
	TIME VARCHAR (30),
	ID_PESSOA VARCHAR (30)
);

/* FOREIGN KEY
ALTER TABLE TIME
ADD FOREIGN KEY (ID_PESSOA)
REFERENCES PESSOA (COLUNA1);

/* VERIFICAR AS CHAVES */
SHOW CREATE TABLE TIME;

/* A34 - ORGANIZAÇÃO DE CHAVES - CONSTRAINT (REGRA) */

CREATE TABLE JOGADOR (
	IDJOGADOR INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR (30)
);

CREATE TABLE TIMES (
	IDTIME INT PRIMARY KEY AUTO_INCREMENT,
	NOMETIME VARCHAR (30),
	ID_JOGADOR INT,
	FOREIGN KEY (ID_JOGADOR)
	REFERENCES JOGADOR(IDJOGADOR)
);

INSERT INTO JOGADOR VALUES (NULL, 'GERREIRO');
INSERT INTO TIMES VALUES (NULL, 'FLAMENGO', 1);

SHOW CREATE TABLE JOGADOR;
SHOW CREATE TABLE TIMES;

/* A35 AÇÕES DE CONSTRAINTS */
DROP TABLE ENDERECO;
DROP TABLE TELEFONE;
DROP TABLE CLIENTE;

CREATE TABLE CLIENTE (
	IDCLIENTE INT,
	NOME VARCHAR (30)NOT NULL
);

CREATE TABLE TELEFONE (
	IDTELEFONE INT,
	TIPO VARCHAR (3) NOT NULL,
	NUMERO VARCHAR (10) NOT NULL,
	ID_CLIENTE INT
);

ALTER TABLE CLIENTE ADD CONSTRAINT PK_CLIENTE
PRIMARY KEY (IDCLIENTE);

ALTER TABLE TELEFONE ADD CONSTRAINT FK_CLIENTE_TELEFONE
FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE (IDCLIENTE);

SHOW CREATE TABLE TELEFONE;

/* DICIONARIO DE DADOS */
USE INFORMATION_SCHEMA;

SHOW TABLES;

DESC TABLE_CONSTRAINTS;

SELECT CONSTRAINT_SCHEMA AS 'BANCO',
	TABLE_NAME AS 'TABELA',
	CONSTRAINT_NAME AS 'NOME REGRA',
	CONSTRAINT_TYPE AS 'TIPO'
	FROM TABLE_CONSTRAINTS
	WHERE CONSTRAINT_SCHEMA = 'EXERCICIO';

USE EXERCICIO;
/* APAGANDO CONSTRAINTS */
ALTER TABLE TELEFONE
DROP FOREIGN KEY FK_CLIENTE_TELEFONE;
